@model DEA.Models.Class

@{
    Layout = "~/Views/Shared/_AdminSidebar.cshtml";
}

<html>
<head>
    <script src="~/Scripts/jquery-2.1.4.min.js"></script>
    <title>Create Class</title>
    <script>
        function classname() {
            debugger;
            var clas = $("#Class").val();
            var section = $("#Section").val();
            $("#ClassName").val(clas + " " + section);
        }
        $(document).ready(function () {
            $("#classid").val(@ViewBag.id);
        });
    </script>
</head>
<body>
    <div class="col-xs-12">
        <h2>
            Create
        </h2>
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
        <div class="form-horizontal">
            <h4>Class</h4>
            <hr />
            <div class="form-group">
                @Html.Label("ClassID", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ClassID, new { htmlAttributes = new { @class = "form-control", @id = "classid", @readonly = "true" } })
                    @Html.ValidationMessageFor(model => model.ClassID, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.Label("Class", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Class1, new { htmlAttributes = new { @class = "form-control", @id = "Class", @onchange = "classname()" } })
                    @Html.ValidationMessageFor(model => model.Class1, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Section, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Section, new { htmlAttributes = new { @class = "form-control", @id = "Section", @onchange = "classname()" } })
                    @Html.ValidationMessageFor(model => model.Section, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ClassName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ClassName, new { htmlAttributes = new { @class = "form-control", @id = "ClassName" } })
                    @Html.ValidationMessageFor(model => model.ClassName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
        }

        <div>
            @Html.ActionLink("Back to List", "ClassIndex")
        </div>
    </div>
</body>
</html>
